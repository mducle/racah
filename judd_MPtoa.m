function a = judd_MPtoa(M,P)
% Converts the Marvin integrals M^k and parameters P^k (k=2,4,6) to equivalent parameters a_i (i=1-11,c)

if ~isvector(M) || length(M)~=3
  error('M must be a length 3 vector');
elseif ~isvector(P) || length(P)~=4
  error('M must be a length 4 vector');
end

a = [( 4*(  55*M(1) -      44*M(2) -        50*M(3) )/165                                                    );   % a1
     (   (                 66*M(2) -       175*M(3) )/770                                                    );   % a2
     ( 8*(                143*M(2) -       175*M(3) )/77                                                     );   % a3
     (-3*(                286*M(2) +       175*M(3) )/22                                                     );   % a4
     (-7*(     M(1) +  (8/21)*M(2) -    (5/33)*M(3) )/15          +   11*(  5*P(2) +  6*P(3) -  91*P(4) )/30 );   % a5
     ( 1*(  33*M(1) +     148*M(2) + (1805/11)*M(3) )/9           -   55*(  5*P(2) +  6*P(3) -  91*P(4) )/6  );   % a6
     (49*(     M(1) +  (8/21)*M(2) -    (5/33)*M(3) )/30          +   11*(  5*P(2) +  6*P(3) -  91*P(4) )/60 );   % a7
     (-7*(  33*M(1) +     148*M(2) + (1805/11)*M(3) )/18          -   55*(  5*P(2) +  6*P(3) -  91*P(4) )/12 );   % a8
     (   (-627*M(1) +      29*M(2) +  (145/11)*M(3) )/40          +   21*( 35*P(2) + 77*P(3) + 143*P(4) )/80 );   % a9
     (   (  33*M(1) -     296*M(2) + (1805/11)*M(3) )/24          +   55*( 19*P(2) - 50*P(3) +  91*P(4) )/16 );   % a10
     (   ( 429*M(1)                - (1455/11)*M(3) )/16          + 2145*(  3*P(2) -  2*P(3) -  21*P(4) )/32 );   % a11
%zc = (13/3)z12 - 40z13 + (4/3)z14
( (13/3)*(( 27*M(1) -       5*M(2) -   (25/11)*M(3) )/24 + P(1)/3 +    1*( 35*P(2) + 77*P(3) + 143*P(4) )/16) ... % a12
     -40*((-33*M(1) + (15/11)*M(2) +   (15/11)*M(3) )             +    3*( 35*P(2) + 77*P(3) + 143*P(4) )/2 ) ... % a13
  +(4/3)*(( 12*M(1) -   (2/3)*M(2) -   (10/33)*M(3) )/5  + P(1)/3 -    1*( 35*P(2) + 77*P(3) + 143*P(4) )/5 ) )]; % a14
